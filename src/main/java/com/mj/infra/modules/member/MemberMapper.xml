<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mj.infra.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.mj.infra.modules.member.Member"></resultMap>
	
	<sql id="selectCommon">
	FROM infrMember a
	WHERE 1=1
		
		<if test="shDelNy != null and !shDelNy.equals('')">AND ifmmDelNy = #{shDelNy}</if>
		<choose>
			<when test="shOption == 1">AND ifmmSeq = #{shValue}</when>
			<when test="shOption == 2">AND ifmmName LIKE CONCAT('%', #{shValue},'%')</when>
			<when test="shOption == 3">AND ifmmId LIKE CONCAT('%', #{shValue},'%')</when>
		</choose>
		ORDER BY a.ifmmSeq desc
	</sql>
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"/>
		SELECT
			a.ifmmSeq
			,a.ifmmId
			,a.ifmmName
			,a.ifmmGender
			,a.ifmmGrade
			,a.ifmmEmailAddress
			,a.ifmmEmailDomain
			,a.ifmmPhone
			,a.ifmmDob
			,a.ifmmEmailNy
			,a.ifmmSmsNy
			,a.ifmmDobLoginNy
			,a.ifmmSnsLogin
			,a.ifmmDelNy
			,a.ifmmUseNy
		<include refid="selectCommon"/>
		<include refid="Base.orderByLimitForMysql"/>
		<include refid="Base.selectListLowerForMysql"/>
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.*
		FROM infrMember a
		WHERE 1=1
		AND	ifmmSeq = #{ifmmSeq}
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"/>
	</select>
	
	<select id="idCheck" resultType="int">
		SELECT
			COUNT(*) 
		FROM
			infrMember
		WHERE 
			ifmmId = #{ifmmId}
	</select>
	
	<insert id="insert">
		INSERT INTO infrMember (
			ifmmId
			,ifmmPassword
			,ifmmName
			,ifmmGender
			,ifmmEmailAddress
			,ifmmEmailDomain
			,ifmmPhone
			,ifmmDob
			,ifmmGrade
			,ifmmDelNy
			,ifmmUseNy
		)
		VALUES(
			#{ifmmId}
			,#{ifmmPassword}
			,#{ifmmName}
			,#{ifmmGender}
			,CONCAT(#{ifmmEmailAddress},'@',(SELECT cc.cdName FROM infrCode cc WHERE cc.cdSeq = #{ifmmEmailDomain}))
			,#{ifmmEmailDomain}
			,#{ifmmPhone}
			<choose>
				<when test="ifmmDob ==''">,NULL</when>
				<otherwise>,#{ifmmDob}</otherwise>
			</choose>
			,4
			,0
			,1
		)
		<selectKey resultType="String" keyProperty="ifmmSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="kakaoInst">
		INSERT INTO infrMember (
			ifmmId
			,ifmmName
			,ifmmEmailAddress
			,ifmmGender
			,ifmmDob
			,ifmmRegDate
			,ifmmSnsLogin
			,ifmmDelNy
			,ifmmSnsImg
			,ifmmGrade
		)
		VALUES (
			#{ifmmId}
			,#{ifmmName}
			,#{ifmmEmailAddress}
			,#{ifmmGender}
			,#{ifmmDob}
			,now()
			,13
			,0
			,#{ifmmSnsImg}
			,4
		)
		<selectKey resultType="String" keyProperty="ifmmSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="naverInst">
		INSERT INTO infrMember (
			ifmmId
			,ifmmName
			,ifmmEmailAddress
			,ifmmGender
			,ifmmDob
			,ifmmRegDate
			,ifmmSnsLogin
			,ifmmDelNy
			,ifmmSnsImg
			,ifmmGrade
		)
		VALUES (
			#{ifmmId}
			,#{ifmmName}
			,#{ifmmEmailAddress}
			,#{ifmmGender}
			,#{ifmmDob}
			,now()
			,12
			,0
			,#{ifmmSnsImg}
			,4
		)
		<selectKey resultType="String" keyProperty="ifmmSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	
	<update id="update">
		UPDATE infrMember
		SET
			ifmmId = #{ifmmId}
			,ifmmPassword = #{ifmmPassword}
			,ifmmName = #{ifmmName}
			,ifmmGender = #{ifmmGender}
			,ifmmGrade = #{ifmmGrade}
			,ifmmEmailAddress = CONCAT(#{ifmmEmailAddress},'@',(SELECT cc.cdName FROM infrCode cc WHERE cc.cdSeq = #{ifmmEmailDomain}))
			,ifmmEmailDomain=#{ifmmEmailDomain}
			,ifmmPhone=#{ifmmPhone}
			,ifmmDob=#{ifmmDob}
			,ifmmEmailNy=#{ifmmEmailNy}
			,ifmmSmsNy=#{ifmmSmsNy}
			,ifmmDobLoginNy=#{ifmmDobLoginNy}
			,ifmmSnsLogin=#{ifmmSnsLogin}
		WHERE 1=1
		AND	ifmmSeq = #{ifmmSeq}
	</update>
	
	<update id="uelete">
		UPDATE infrMember
		SET
			ifmmDelNy = 1
		WHERE
			ifmmSeq = #{ifmmSeq}
	</update>
	
	<delete id="delete">
		DELETE FROM infrMember WHERE ifmmSeq = #{ifmmSeq}
	</delete>
	
	<select id="selectOneIdCheck" resultType="Integer">
		SELECT
			count(ifmmSeq)
		FROM
			infrMember a
		WHERE 1=1
		AND a.ifmmid = #{ifmmId}
	</select>
	
	<select id="selectOneId"  resultMap="resultMapObj">
		SELECT
			a.ifmmSeq
			,a.ifmmId
			,a.ifmmName
			,a.ifmmGrade
			,a.ifmmSnsImg
		FROM
			infrMember a
		WHERE 1=1 
		AND a.ifmmId = #{ifmmId}
	</select>
	
	<select id="selectOneLogin" resultMap="resultMapObj">
		SELECT
			a.*
		FROM 
			infrMember a
		WHERE 1=1
			AND a.ifmmId=#{ifmmId}
			<if test="ifmmPassword != null and !ifmmPassword.equals('')">AND a.ifmmPassword = #{ifmmPassword}</if> 
	</select>
	
	<select id="snsLoginSelectOne" resultMap="resultMapObj">
		select 
			a.ifmmSeq
			,a.ifmmId
			,a.ifmmPassword
			,a.ifmmName
			,a.ifmmGender
			,a.ifmmGrade
			,a.ifmmEmailAddress
			,a.ifmmEmailDomain
			,a.ifmmPhone
			,a.ifmmDob
			,a.ifmmSnsLogin
			,a.ifmmSnsImg
			,a.ifmmDelNy
		from infrMember a
		where 1=1
			and a.ifmmId=#{ifmmId}
			<if test="ifmmPassword != null and !ifmmPassword.equals('')">AND a.ifmmPassword = #{ifmmPassword}</if>
	</select>
	
	<select id="findId" resultMap="resultMapObj">
		SELECT 
			ifmmId
		FROM infrMember
		WHERE 1=1
			and ifmmName = #{ifmmName}
			and ifmmDob = #{ifmmDob}
			and ifmmPhone = #{ifmmPhone}
	</select>
	
	<select id="findPw" parameterType="String" resultType="int">
		SELECT 
			count(*)
		FROM infrMember
		WHERE 1=1
			and ifmmId = #{ifmmId}
			and ifmmName = #{ifmmName}
			and ifmmDob = #{ifmmDob}
	</select>
	
	<update id="changPwd">
		UPDATE infrMember
		SET
			ifmmPassword = #{ifmmPassword}
		WHERE 1=1
			and ifmmId = #{ifmmId}
			and ifmmName = #{ifmmName}
			and ifmmDob = #{ifmmDob}
	</update>
	
	
	
	
	
	
	

</mapper>